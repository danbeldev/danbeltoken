// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"max\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jack\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"changeCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getReferralCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"refCodeUser\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"referralCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"fromReferralCode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"discountPercent\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"code\",\"type\":\"string\"}],\"name\":\"setReferral\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"setUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"referralCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"fromReferralCode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"discountPercent\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040526040518060400160405280600b81526020017f44616e42656c546f6b656e0000000000000000000000000000000000000000008152506000908051906020019062000051929190620008a6565b506040518060400160405280600681526020017f44616e42656c0000000000000000000000000000000000000000000000000000815250600190805190602001906200009f929190620008a6565b506006600255620f42406003556602aa1efb94e000600455348015620000c457600080fd5b5060405162002d8f38038062002d8f8339818101604052810190620000ea91906200096d565b83600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000198600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620186a06040518060400160405280600581526020017f4f574e45520000000000000000000000000000000000000000000000000000008152506200028360201b60201c565b620001e38362030d406040518060400160405280600981526020017f424153455f5553455200000000000000000000000000000000000000000000008152506200028360201b60201c565b6200022e82620493e06040518060400160405280600981526020017f424153455f5553455200000000000000000000000000000000000000000000008152506200028360201b60201c565b620002798162061a806040518060400160405280600981526020017f424153455f5553455200000000000000000000000000000000000000000000008152506200028360201b60201c565b5050505062000d73565b600062000296846200056160201b60201c565b905060006040518060c00160405280838152602001604051806020016040528060008152508152602001858152602001600060ff1681526020018481526020018673ffffffffffffffffffffffffffffffffffffffff16815250905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019062000350929190620008a6565b5060208201518160010190805190602001906200036f929190620008a6565b506040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055506080820151816004019080519060200190620003b9929190620008a6565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508060068360405162000417919062000a94565b9081526020016040518091039020600082015181600001908051906020019062000443929190620008a6565b50602082015181600101908051906020019062000462929190620008a6565b506040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055506080820151816004019080519060200190620004ac929190620008a6565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506007859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b606060008260601b90506000600467ffffffffffffffff811115620005af577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015620005e25781602001600182028036833780820191505090505b50905060006040518060400160405280601081526020017f3031323334353637383961626364656600000000000000000000000000000000815250905060005b60028160ff1610156200087957818251858360ff16600281106200066f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b60f81c60ff1662000685919062000b34565b81518110620006bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b83600283620006d8919062000b6c565b60ff168151811062000713577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818251858360ff166002811062000782577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b60f81c60ff1662000798919062000c94565b81518110620007d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b836001600284620007ed919062000b6c565b620007f9919062000af6565b60ff168151811062000834577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080620008709062000c65565b91505062000622565b50816040516020016200088d919062000aad565b6040516020818303038152906040529350505050919050565b828054620008b49062000c2f565b90600052602060002090601f016020900481019282620008d8576000855562000924565b82601f10620008f357805160ff191683800117855562000924565b8280016001018555821562000924579182015b828111156200092357825182559160200191906001019062000906565b5b50905062000933919062000937565b5090565b5b808211156200095257600081600090555060010162000938565b5090565b600081519050620009678162000d59565b92915050565b600080600080608085870312156200098457600080fd5b6000620009948782880162000956565b9450506020620009a78782880162000956565b9350506040620009ba8782880162000956565b9250506060620009cd8782880162000956565b91505092959194509250565b6000620009e68262000ae0565b620009f2818562000aeb565b935062000a0481856020860162000bf9565b80840191505092915050565b600062000a1f60088362000aeb565b91507f50524f4649202d200000000000000000000000000000000000000000000000006000830152600882019050919050565b600062000a6160048362000aeb565b91507f32303234000000000000000000000000000000000000000000000000000000006000830152600482019050919050565b600062000aa28284620009d9565b915081905092915050565b600062000aba8262000a10565b915062000ac88284620009d9565b915062000ad58262000a52565b915081905092915050565b600081519050919050565b600081905092915050565b600062000b038262000bec565b915062000b108362000bec565b92508260ff0382111562000b295762000b2862000ccc565b5b828201905092915050565b600062000b418262000be2565b915062000b4e8362000be2565b92508262000b615762000b6062000cfb565b5b828204905092915050565b600062000b798262000bec565b915062000b868362000bec565b92508160ff048311821515161562000ba35762000ba262000ccc565b5b828202905092915050565b600062000bbb8262000bc2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101562000c1957808201518184015260208101905062000bfc565b8381111562000c29576000848401525b50505050565b6000600282049050600182168062000c4857607f821691505b6020821081141562000c5f5762000c5e62000d2a565b5b50919050565b600062000c728262000bec565b915060ff82141562000c895762000c8862000ccc565b5b600182019050919050565b600062000ca18262000be2565b915062000cae8362000be2565b92508262000cc15762000cc062000cfb565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b62000d648162000bae565b811462000d7057600080fd5b50565b61200c8062000d836000396000f3fe6080604052600436106100dd5760003560e01c806392c403441161007f578063a87430ba11610059578063a87430ba146102b0578063b6a984ba146102f2578063d96a094a1461031b578063f5b88a5314610337576100dd565b806392c403441461020b57806395d89b41146102485780639674a0ac14610273576100dd565b806318160ddd116100bb57806318160ddd14610161578063313ce5671461018c5780635cb85cd2146101b75780638da5cb5b146101e0576100dd565b806306fdde03146100e257806309ab28b81461010d57806313faede614610136575b600080fd5b3480156100ee57600080fd5b506100f7610379565b6040516101049190611b01565b60405180910390f35b34801561011957600080fd5b50610134600480360381019061012f919061188b565b610407565b005b34801561014257600080fd5b5061014b6106cf565b6040516101589190611b99565b60405180910390f35b34801561016d57600080fd5b506101766106d5565b6040516101839190611b99565b60405180910390f35b34801561019857600080fd5b506101a16106db565b6040516101ae9190611b99565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190611933565b6106e1565b005b3480156101ec57600080fd5b506101f56106eb565b6040516102029190611ae6565b60405180910390f35b34801561021757600080fd5b50610232600480360381019061022d919061180e565b610711565b60405161023f9190611b01565b60405180910390f35b34801561025457600080fd5b5061025d610a3e565b60405161026a9190611b01565b60405180910390f35b34801561027f57600080fd5b5061029a60048036038101906102959190611933565b610acc565b6040516102a79190611ae6565b60405180910390f35b3480156102bc57600080fd5b506102d760048036038101906102d2919061180e565b610b0b565b6040516102e996959493929190611b23565b60405180910390f35b3480156102fe57600080fd5b5061031960048036038101906103149190611837565b610d0c565b005b61033560048036038101906103309190611933565b611304565b005b34801561034357600080fd5b5061035e600480360381019061035991906118f2565b61140b565b60405161037096959493929190611b23565b60405180910390f35b6000805461038690611e4e565b80601f01602080910402602001604051908101604052809291908181526020018280546103b290611e4e565b80156103ff5780601f106103d4576101008083540402835291602001916103ff565b820191906000526020600020905b8154815290600101906020018083116103e257829003601f168201915b505050505081565b600061041284610711565b905060006040518060c00160405280838152602001604051806020016040528060008152508152602001858152602001600060ff1681526020018481526020018673ffffffffffffffffffffffffffffffffffffffff16815250905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906104ca9291906116d9565b5060208201518160010190805190602001906104e79291906116d9565b506040820151816002015560608201518160030160006101000a81548160ff021916908360ff160217905550608082015181600401908051906020019061052f9291906116d9565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508060068360405161058b9190611a8d565b908152602001604051809103902060008201518160000190805190602001906105b59291906116d9565b5060208201518160010190805190602001906105d29291906116d9565b506040820151816002015560608201518160030160006101000a81548160ff021916908360ff160217905550608082015181600401908051906020019061061a9291906116d9565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506007859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60045481565b60035481565b60025481565b8060048190555050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008260601b90506000600467ffffffffffffffff81111561075e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107905781602001600182028036833780820191505090505b50905060006040518060400160405280601081526020017f3031323334353637383961626364656600000000000000000000000000000000815250905060005b60028160ff161015610a1357818251858360ff166002811061081b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b60f81c60ff1661082f9190611cc9565b81518110610866577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b8360028361087f9190611d54565b60ff16815181106108b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818251858360ff1660028110610927577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b60f81c60ff1661093b9190611eaa565b81518110610972577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b83600160028461098d9190611d54565b6109979190611c92565b60ff16815181106109d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610a0b90611e80565b9150506107d0565b5081604051602001610a259190611aa4565b6040516020818303038152906040529350505050919050565b60018054610a4b90611e4e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7790611e4e565b8015610ac45780601f10610a9957610100808354040283529160200191610ac4565b820191906000526020600020905b815481529060010190602001808311610aa757829003601f168201915b505050505081565b60078181548110610adc57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052806000526040600020600091509050806000018054610b2e90611e4e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5a90611e4e565b8015610ba75780601f10610b7c57610100808354040283529160200191610ba7565b820191906000526020600020905b815481529060010190602001808311610b8a57829003601f168201915b505050505090806001018054610bbc90611e4e565b80601f0160208091040260200160405190810160405280929190818152602001828054610be890611e4e565b8015610c355780601f10610c0a57610100808354040283529160200191610c35565b820191906000526020600020905b815481529060010190602001808311610c1857829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff1690806004018054610c6390611e4e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8f90611e4e565b8015610cdc5780601f10610cb157610100808354040283529160200191610cdc565b820191906000526020600020905b815481529060010190602001808311610cbf57829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c0016040529081600082018054610d6890611e4e565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9490611e4e565b8015610de15780601f10610db657610100808354040283529160200191610de1565b820191906000526020600020905b815481529060010190602001808311610dc457829003601f168201915b50505050508152602001600182018054610dfa90611e4e565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2690611e4e565b8015610e735780601f10610e4857610100808354040283529160200191610e73565b820191906000526020600020905b815481529060010190602001808311610e5657829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff168152602001600482018054610eb390611e4e565b80601f0160208091040260200160405190810160405280929190818152602001828054610edf90611e4e565b8015610f2c5780601f10610f0157610100808354040283529160200191610f2c565b820191906000526020600020905b815481529060010190602001808311610f0f57829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050604051602001610f9c90611ad1565b604051602081830303815290604052805190602001208160200151604051602001610fc79190611a8d565b604051602081830303815290604052805190602001201415610fe857600080fd5b81604051602001610ff99190611a8d565b6040516020818303038152906040528051906020012081600001516040516020016110249190611a8d565b604051602081830303815290604052805190602001201461104457600080fd5b60006006836040516110569190611a8d565b90815260200160405180910390206040518060c001604052908160008201805461107f90611e4e565b80601f01602080910402602001604051908101604052809291908181526020018280546110ab90611e4e565b80156110f85780601f106110cd576101008083540402835291602001916110f8565b820191906000526020600020905b8154815290600101906020018083116110db57829003601f168201915b5050505050815260200160018201805461111190611e4e565b80601f016020809104026020016040519081016040528092919081815260200182805461113d90611e4e565b801561118a5780601f1061115f5761010080835404028352916020019161118a565b820191906000526020600020905b81548152906001019060200180831161116d57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff1681526020016004820180546111ca90611e4e565b80601f01602080910402602001604051908101604052809291908181526020018280546111f690611e4e565b80156112435780601f1061121857610100808354040283529160200191611243565b820191906000526020600020905b81548152906001019060200180831161122657829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506003816060015160ff1610156112b957600080fd5b8282602001819052506064826040018181516112d59190611c3c565b915081815250506001816060018181516112ef9190611c92565b91509060ff16908160ff168152505050505050565b6000600454826113149190611cfa565b9050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561137e573d6000803e3d6000fd5b50348110156113da573373ffffffffffffffffffffffffffffffffffffffff166108fc34836113ad9190611d8f565b9081150290604051600060405180830381858888f193505050501580156113d8573d6000803e3d6000fd5b505b611407600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384611622565b5050565b60068180516020810182018051848252602083016020850120818352809550505050505060009150905080600001805461144490611e4e565b80601f016020809104026020016040519081016040528092919081815260200182805461147090611e4e565b80156114bd5780601f10611492576101008083540402835291602001916114bd565b820191906000526020600020905b8154815290600101906020018083116114a057829003601f168201915b5050505050908060010180546114d290611e4e565b80601f01602080910402602001604051908101604052809291908181526020018280546114fe90611e4e565b801561154b5780601f106115205761010080835404028352916020019161154b565b820191906000526020600020905b81548152906001019060200180831161152e57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff169080600401805461157990611e4e565b80601f01602080910402602001604051908101604052809291908181526020018280546115a590611e4e565b80156115f25780601f106115c7576101008083540402835291602001916115f2565b820191906000526020600020905b8154815290600101906020018083116115d557829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546116749190611d8f565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546116cd9190611c3c565b92505081905550505050565b8280546116e590611e4e565b90600052602060002090601f016020900481019282611707576000855561174e565b82601f1061172057805160ff191683800117855561174e565b8280016001018555821561174e579182015b8281111561174d578251825591602001919060010190611732565b5b50905061175b919061175f565b5090565b5b80821115611778576000816000905550600101611760565b5090565b600061178f61178a84611be5565b611bb4565b9050828152602081018484840111156117a757600080fd5b6117b2848285611e0c565b509392505050565b6000813590506117c981611fa8565b92915050565b600082601f8301126117e057600080fd5b81356117f084826020860161177c565b91505092915050565b60008135905061180881611fbf565b92915050565b60006020828403121561182057600080fd5b600061182e848285016117ba565b91505092915050565b6000806040838503121561184a57600080fd5b6000611858858286016117ba565b925050602083013567ffffffffffffffff81111561187557600080fd5b611881858286016117cf565b9150509250929050565b6000806000606084860312156118a057600080fd5b60006118ae868287016117ba565b93505060206118bf868287016117f9565b925050604084013567ffffffffffffffff8111156118dc57600080fd5b6118e8868287016117cf565b9150509250925092565b60006020828403121561190457600080fd5b600082013567ffffffffffffffff81111561191e57600080fd5b61192a848285016117cf565b91505092915050565b60006020828403121561194557600080fd5b6000611953848285016117f9565b91505092915050565b61196581611dc3565b82525050565b600061197682611c15565b6119808185611c20565b9350611990818560208601611e1b565b61199981611f97565b840191505092915050565b60006119af82611c15565b6119b98185611c31565b93506119c9818560208601611e1b565b80840191505092915050565b60006119e2600883611c31565b91507f50524f4649202d200000000000000000000000000000000000000000000000006000830152600882019050919050565b6000611a22600483611c31565b91507f32303234000000000000000000000000000000000000000000000000000000006000830152600482019050919050565b6000611a62600083611c31565b9150600082019050919050565b611a7881611df5565b82525050565b611a8781611dff565b82525050565b6000611a9982846119a4565b915081905092915050565b6000611aaf826119d5565b9150611abb82846119a4565b9150611ac682611a15565b915081905092915050565b6000611adc82611a55565b9150819050919050565b6000602082019050611afb600083018461195c565b92915050565b60006020820190508181036000830152611b1b818461196b565b905092915050565b600060c0820190508181036000830152611b3d818961196b565b90508181036020830152611b51818861196b565b9050611b606040830187611a6f565b611b6d6060830186611a7e565b8181036080830152611b7f818561196b565b9050611b8e60a083018461195c565b979650505050505050565b6000602082019050611bae6000830184611a6f565b92915050565b6000604051905081810181811067ffffffffffffffff82111715611bdb57611bda611f68565b5b8060405250919050565b600067ffffffffffffffff821115611c0057611bff611f68565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611c4782611df5565b9150611c5283611df5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c8757611c86611edb565b5b828201905092915050565b6000611c9d82611dff565b9150611ca883611dff565b92508260ff03821115611cbe57611cbd611edb565b5b828201905092915050565b6000611cd482611df5565b9150611cdf83611df5565b925082611cef57611cee611f0a565b5b828204905092915050565b6000611d0582611df5565b9150611d1083611df5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d4957611d48611edb565b5b828202905092915050565b6000611d5f82611dff565b9150611d6a83611dff565b92508160ff0483118215151615611d8457611d83611edb565b5b828202905092915050565b6000611d9a82611df5565b9150611da583611df5565b925082821015611db857611db7611edb565b5b828203905092915050565b6000611dce82611dd5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015611e39578082015181840152602081019050611e1e565b83811115611e48576000848401525b50505050565b60006002820490506001821680611e6657607f821691505b60208210811415611e7a57611e79611f39565b5b50919050565b6000611e8b82611dff565b915060ff821415611e9f57611e9e611edb565b5b600182019050919050565b6000611eb582611df5565b9150611ec083611df5565b925082611ed057611ecf611f0a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611fb181611dc3565b8114611fbc57600080fd5b50565b611fc881611df5565b8114611fd357600080fd5b5056fea264697066735822122008d490e882f8d63004a935fde9d670e7585105a28c1ddfe427256b3b9200c15f64736f6c63430008000033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend, _owner common.Address, tom common.Address, max common.Address, jack common.Address) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend, _owner, tom, max, jack)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// Cost is a free data retrieval call binding the contract method 0x13faede6.
//
// Solidity: function cost() view returns(uint256)
func (_Contract *ContractCaller) Cost(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "cost")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Cost is a free data retrieval call binding the contract method 0x13faede6.
//
// Solidity: function cost() view returns(uint256)
func (_Contract *ContractSession) Cost() (*big.Int, error) {
	return _Contract.Contract.Cost(&_Contract.CallOpts)
}

// Cost is a free data retrieval call binding the contract method 0x13faede6.
//
// Solidity: function cost() view returns(uint256)
func (_Contract *ContractCallerSession) Cost() (*big.Int, error) {
	return _Contract.Contract.Cost(&_Contract.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint256)
func (_Contract *ContractCaller) Decimals(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint256)
func (_Contract *ContractSession) Decimals() (*big.Int, error) {
	return _Contract.Contract.Decimals(&_Contract.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint256)
func (_Contract *ContractCallerSession) Decimals() (*big.Int, error) {
	return _Contract.Contract.Decimals(&_Contract.CallOpts)
}

// GetReferralCode is a free data retrieval call binding the contract method 0x92c40344.
//
// Solidity: function getReferralCode(address addr) pure returns(string)
func (_Contract *ContractCaller) GetReferralCode(opts *bind.CallOpts, addr common.Address) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getReferralCode", addr)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetReferralCode is a free data retrieval call binding the contract method 0x92c40344.
//
// Solidity: function getReferralCode(address addr) pure returns(string)
func (_Contract *ContractSession) GetReferralCode(addr common.Address) (string, error) {
	return _Contract.Contract.GetReferralCode(&_Contract.CallOpts, addr)
}

// GetReferralCode is a free data retrieval call binding the contract method 0x92c40344.
//
// Solidity: function getReferralCode(address addr) pure returns(string)
func (_Contract *ContractCallerSession) GetReferralCode(addr common.Address) (string, error) {
	return _Contract.Contract.GetReferralCode(&_Contract.CallOpts, addr)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Contract *ContractCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Contract *ContractSession) Name() (string, error) {
	return _Contract.Contract.Name(&_Contract.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Contract *ContractCallerSession) Name() (string, error) {
	return _Contract.Contract.Name(&_Contract.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contract *ContractCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contract *ContractSession) Owner() (common.Address, error) {
	return _Contract.Contract.Owner(&_Contract.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contract *ContractCallerSession) Owner() (common.Address, error) {
	return _Contract.Contract.Owner(&_Contract.CallOpts)
}

// RefCodeUser is a free data retrieval call binding the contract method 0xf5b88a53.
//
// Solidity: function refCodeUser(string ) view returns(string referralCode, string fromReferralCode, uint256 balance, uint8 discountPercent, string role, address addr)
func (_Contract *ContractCaller) RefCodeUser(opts *bind.CallOpts, arg0 string) (struct {
	ReferralCode     string
	FromReferralCode string
	Balance          *big.Int
	DiscountPercent  uint8
	Role             string
	Addr             common.Address
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "refCodeUser", arg0)

	outstruct := new(struct {
		ReferralCode     string
		FromReferralCode string
		Balance          *big.Int
		DiscountPercent  uint8
		Role             string
		Addr             common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ReferralCode = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.FromReferralCode = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Balance = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.DiscountPercent = *abi.ConvertType(out[3], new(uint8)).(*uint8)
	outstruct.Role = *abi.ConvertType(out[4], new(string)).(*string)
	outstruct.Addr = *abi.ConvertType(out[5], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// RefCodeUser is a free data retrieval call binding the contract method 0xf5b88a53.
//
// Solidity: function refCodeUser(string ) view returns(string referralCode, string fromReferralCode, uint256 balance, uint8 discountPercent, string role, address addr)
func (_Contract *ContractSession) RefCodeUser(arg0 string) (struct {
	ReferralCode     string
	FromReferralCode string
	Balance          *big.Int
	DiscountPercent  uint8
	Role             string
	Addr             common.Address
}, error) {
	return _Contract.Contract.RefCodeUser(&_Contract.CallOpts, arg0)
}

// RefCodeUser is a free data retrieval call binding the contract method 0xf5b88a53.
//
// Solidity: function refCodeUser(string ) view returns(string referralCode, string fromReferralCode, uint256 balance, uint8 discountPercent, string role, address addr)
func (_Contract *ContractCallerSession) RefCodeUser(arg0 string) (struct {
	ReferralCode     string
	FromReferralCode string
	Balance          *big.Int
	DiscountPercent  uint8
	Role             string
	Addr             common.Address
}, error) {
	return _Contract.Contract.RefCodeUser(&_Contract.CallOpts, arg0)
}

// SetReferral is a free data retrieval call binding the contract method 0xb6a984ba.
//
// Solidity: function setReferral(address addr, string code) view returns()
func (_Contract *ContractCaller) SetReferral(opts *bind.CallOpts, addr common.Address, code string) error {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "setReferral", addr, code)

	if err != nil {
		return err
	}

	return err

}

// SetReferral is a free data retrieval call binding the contract method 0xb6a984ba.
//
// Solidity: function setReferral(address addr, string code) view returns()
func (_Contract *ContractSession) SetReferral(addr common.Address, code string) error {
	return _Contract.Contract.SetReferral(&_Contract.CallOpts, addr, code)
}

// SetReferral is a free data retrieval call binding the contract method 0xb6a984ba.
//
// Solidity: function setReferral(address addr, string code) view returns()
func (_Contract *ContractCallerSession) SetReferral(addr common.Address, code string) error {
	return _Contract.Contract.SetReferral(&_Contract.CallOpts, addr, code)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Contract *ContractCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Contract *ContractSession) Symbol() (string, error) {
	return _Contract.Contract.Symbol(&_Contract.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Contract *ContractCallerSession) Symbol() (string, error) {
	return _Contract.Contract.Symbol(&_Contract.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Contract *ContractCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Contract *ContractSession) TotalSupply() (*big.Int, error) {
	return _Contract.Contract.TotalSupply(&_Contract.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Contract *ContractCallerSession) TotalSupply() (*big.Int, error) {
	return _Contract.Contract.TotalSupply(&_Contract.CallOpts)
}

// UserAddress is a free data retrieval call binding the contract method 0x9674a0ac.
//
// Solidity: function userAddress(uint256 ) view returns(address)
func (_Contract *ContractCaller) UserAddress(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "userAddress", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// UserAddress is a free data retrieval call binding the contract method 0x9674a0ac.
//
// Solidity: function userAddress(uint256 ) view returns(address)
func (_Contract *ContractSession) UserAddress(arg0 *big.Int) (common.Address, error) {
	return _Contract.Contract.UserAddress(&_Contract.CallOpts, arg0)
}

// UserAddress is a free data retrieval call binding the contract method 0x9674a0ac.
//
// Solidity: function userAddress(uint256 ) view returns(address)
func (_Contract *ContractCallerSession) UserAddress(arg0 *big.Int) (common.Address, error) {
	return _Contract.Contract.UserAddress(&_Contract.CallOpts, arg0)
}

// Users is a free data retrieval call binding the contract method 0xa87430ba.
//
// Solidity: function users(address ) view returns(string referralCode, string fromReferralCode, uint256 balance, uint8 discountPercent, string role, address addr)
func (_Contract *ContractCaller) Users(opts *bind.CallOpts, arg0 common.Address) (struct {
	ReferralCode     string
	FromReferralCode string
	Balance          *big.Int
	DiscountPercent  uint8
	Role             string
	Addr             common.Address
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "users", arg0)

	outstruct := new(struct {
		ReferralCode     string
		FromReferralCode string
		Balance          *big.Int
		DiscountPercent  uint8
		Role             string
		Addr             common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ReferralCode = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.FromReferralCode = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Balance = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.DiscountPercent = *abi.ConvertType(out[3], new(uint8)).(*uint8)
	outstruct.Role = *abi.ConvertType(out[4], new(string)).(*string)
	outstruct.Addr = *abi.ConvertType(out[5], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// Users is a free data retrieval call binding the contract method 0xa87430ba.
//
// Solidity: function users(address ) view returns(string referralCode, string fromReferralCode, uint256 balance, uint8 discountPercent, string role, address addr)
func (_Contract *ContractSession) Users(arg0 common.Address) (struct {
	ReferralCode     string
	FromReferralCode string
	Balance          *big.Int
	DiscountPercent  uint8
	Role             string
	Addr             common.Address
}, error) {
	return _Contract.Contract.Users(&_Contract.CallOpts, arg0)
}

// Users is a free data retrieval call binding the contract method 0xa87430ba.
//
// Solidity: function users(address ) view returns(string referralCode, string fromReferralCode, uint256 balance, uint8 discountPercent, string role, address addr)
func (_Contract *ContractCallerSession) Users(arg0 common.Address) (struct {
	ReferralCode     string
	FromReferralCode string
	Balance          *big.Int
	DiscountPercent  uint8
	Role             string
	Addr             common.Address
}, error) {
	return _Contract.Contract.Users(&_Contract.CallOpts, arg0)
}

// Buy is a paid mutator transaction binding the contract method 0xd96a094a.
//
// Solidity: function buy(uint256 amount) payable returns()
func (_Contract *ContractTransactor) Buy(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buy", amount)
}

// Buy is a paid mutator transaction binding the contract method 0xd96a094a.
//
// Solidity: function buy(uint256 amount) payable returns()
func (_Contract *ContractSession) Buy(amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Buy(&_Contract.TransactOpts, amount)
}

// Buy is a paid mutator transaction binding the contract method 0xd96a094a.
//
// Solidity: function buy(uint256 amount) payable returns()
func (_Contract *ContractTransactorSession) Buy(amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Buy(&_Contract.TransactOpts, amount)
}

// ChangeCost is a paid mutator transaction binding the contract method 0x5cb85cd2.
//
// Solidity: function changeCost(uint256 newValue) returns()
func (_Contract *ContractTransactor) ChangeCost(opts *bind.TransactOpts, newValue *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "changeCost", newValue)
}

// ChangeCost is a paid mutator transaction binding the contract method 0x5cb85cd2.
//
// Solidity: function changeCost(uint256 newValue) returns()
func (_Contract *ContractSession) ChangeCost(newValue *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.ChangeCost(&_Contract.TransactOpts, newValue)
}

// ChangeCost is a paid mutator transaction binding the contract method 0x5cb85cd2.
//
// Solidity: function changeCost(uint256 newValue) returns()
func (_Contract *ContractTransactorSession) ChangeCost(newValue *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.ChangeCost(&_Contract.TransactOpts, newValue)
}

// SetUser is a paid mutator transaction binding the contract method 0x09ab28b8.
//
// Solidity: function setUser(address addr, uint256 balance, string role) returns()
func (_Contract *ContractTransactor) SetUser(opts *bind.TransactOpts, addr common.Address, balance *big.Int, role string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "setUser", addr, balance, role)
}

// SetUser is a paid mutator transaction binding the contract method 0x09ab28b8.
//
// Solidity: function setUser(address addr, uint256 balance, string role) returns()
func (_Contract *ContractSession) SetUser(addr common.Address, balance *big.Int, role string) (*types.Transaction, error) {
	return _Contract.Contract.SetUser(&_Contract.TransactOpts, addr, balance, role)
}

// SetUser is a paid mutator transaction binding the contract method 0x09ab28b8.
//
// Solidity: function setUser(address addr, uint256 balance, string role) returns()
func (_Contract *ContractTransactorSession) SetUser(addr common.Address, balance *big.Int, role string) (*types.Transaction, error) {
	return _Contract.Contract.SetUser(&_Contract.TransactOpts, addr, balance, role)
}
